"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/session.ts":
/*!************************!*\
  !*** ./lib/session.ts ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sessionManager: function() { return /* binding */ sessionManager; },\n/* harmony export */   useSessionPersistence: function() { return /* binding */ useSessionPersistence; }\n/* harmony export */ });\n// Gestionnaire de session pour persist dans la session courante uniquement\n// Se renouvelle à chaque fermeture/actualisation de page\nclass SessionManager {\n    static getInstance() {\n        if (!SessionManager.instance) {\n            SessionManager.instance = new SessionManager();\n        }\n        return SessionManager.instance;\n    }\n    generateSessionId() {\n        // Format: timestamp + random string\n        const timestamp = Date.now();\n        const randomPart = Math.random().toString(36).substring(2, 15);\n        return \"session_\".concat(timestamp, \"_\").concat(randomPart);\n    }\n    initializeSession() {\n        // Toujours créer une nouvelle session (ne pas récupérer l'ancienne)\n        const sessionData = {\n            sessionId: this.sessionId,\n            createdAt: new Date(),\n            messages: [],\n            analysisResults: null\n        };\n        this.saveToSessionStorage(sessionData);\n        console.log(\"\\uD83C\\uDD94 Nouvelle session cr\\xe9\\xe9e: \".concat(this.sessionId));\n    }\n    getSessionId() {\n        return this.sessionId;\n    }\n    saveMessages(messages) {\n        const sessionData = this.getSessionData();\n        if (sessionData) {\n            sessionData.messages = messages;\n            this.saveToSessionStorage(sessionData);\n        }\n    }\n    getMessages() {\n        const sessionData = this.getSessionData();\n        return (sessionData === null || sessionData === void 0 ? void 0 : sessionData.messages) || [];\n    }\n    saveAnalysisResults(results) {\n        const sessionData = this.getSessionData();\n        if (sessionData) {\n            sessionData.analysisResults = results;\n            this.saveToSessionStorage(sessionData);\n        }\n    }\n    getAnalysisResults() {\n        const sessionData = this.getSessionData();\n        return (sessionData === null || sessionData === void 0 ? void 0 : sessionData.analysisResults) || null;\n    }\n    clearSession() {\n        sessionStorage.removeItem(this.storageKey);\n        this.initializeSession();\n    }\n    getSessionData() {\n        try {\n            const stored = sessionStorage.getItem(this.storageKey);\n            if (stored) {\n                const parsed = JSON.parse(stored);\n                // Reconstituer les dates\n                parsed.createdAt = new Date(parsed.createdAt);\n                return parsed;\n            }\n        } catch (error) {\n            console.error(\"Erreur lors de la lecture de la session:\", error);\n        }\n        return null;\n    }\n    saveToSessionStorage(data) {\n        try {\n            sessionStorage.setItem(this.storageKey, JSON.stringify(data));\n        } catch (error) {\n            console.error(\"Erreur lors de la sauvegarde de la session:\", error);\n        }\n    }\n    getSessionInfo() {\n        var _data_messages;\n        const data = this.getSessionData();\n        return {\n            sessionId: this.sessionId,\n            createdAt: (data === null || data === void 0 ? void 0 : data.createdAt) || new Date(),\n            messageCount: (data === null || data === void 0 ? void 0 : (_data_messages = data.messages) === null || _data_messages === void 0 ? void 0 : _data_messages.length) || 0\n        };\n    }\n    constructor(){\n        this.storageKey = \"reddit-analysis-session\";\n        // Générer un nouvel ID de session à chaque instanciation (= chaque actualisation/ouverture)\n        this.sessionId = this.generateSessionId();\n        this.initializeSession();\n    }\n}\n// Export de l'instance singleton\nconst sessionManager = SessionManager.getInstance();\n// Utilitaires pour React\nconst useSessionPersistence = ()=>{\n    return {\n        sessionId: sessionManager.getSessionId(),\n        saveMessages: sessionManager.saveMessages.bind(sessionManager),\n        getMessages: sessionManager.getMessages.bind(sessionManager),\n        saveAnalysisResults: sessionManager.saveAnalysisResults.bind(sessionManager),\n        getAnalysisResults: sessionManager.getAnalysisResults.bind(sessionManager),\n        clearSession: sessionManager.clearSession.bind(sessionManager),\n        getSessionInfo: sessionManager.getSessionInfo.bind(sessionManager)\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/session.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/store.ts":
/*!**********************!*\
  !*** ./lib/store.ts ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAnalysisStore: function() { return /* binding */ useAnalysisStore; },\n/* harmony export */   useChatStore: function() { return /* binding */ useChatStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./session */ \"(app-pages-browser)/./lib/session.ts\");\n\n\nconst useChatStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)((set, get)=>({\n        messages: [],\n        isTyping: false,\n        sessionId: _session__WEBPACK_IMPORTED_MODULE_0__.sessionManager.getSessionId(),\n        addMessage: (message)=>{\n            const newMessage = {\n                ...message,\n                id: Date.now().toString(),\n                timestamp: new Date()\n            };\n            set((state)=>{\n                const updatedMessages = [\n                    ...state.messages,\n                    newMessage\n                ];\n                // Sauvegarder dans sessionStorage\n                _session__WEBPACK_IMPORTED_MODULE_0__.sessionManager.saveMessages(updatedMessages);\n                return {\n                    messages: updatedMessages\n                };\n            });\n        },\n        setTyping: (isTyping)=>set({\n                isTyping\n            }),\n        clearMessages: ()=>{\n            set({\n                messages: []\n            });\n            // Effacer aussi de sessionStorage\n            _session__WEBPACK_IMPORTED_MODULE_0__.sessionManager.saveMessages([]);\n        },\n        setSessionId: (sessionId)=>set({\n                sessionId\n            }),\n        initializeFromSession: ()=>{\n            // Charger les messages depuis sessionStorage au démarrage\n            const savedMessages = _session__WEBPACK_IMPORTED_MODULE_0__.sessionManager.getMessages();\n            if (savedMessages.length > 0) {\n                // Reconstituer les dates des messages\n                const messagesWithDates = savedMessages.map((msg)=>({\n                        ...msg,\n                        timestamp: new Date(msg.timestamp)\n                    }));\n                set({\n                    messages: messagesWithDates,\n                    sessionId: _session__WEBPACK_IMPORTED_MODULE_0__.sessionManager.getSessionId()\n                });\n            } else {\n                set({\n                    sessionId: _session__WEBPACK_IMPORTED_MODULE_0__.sessionManager.getSessionId()\n                });\n            }\n        }\n    }));\nconst useAnalysisStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)((set, get)=>({\n        state: {\n            subreddit: \"\",\n            isAnalyzing: false,\n            analysisResults: null,\n            recommendations: null\n        },\n        setSubreddit: (subreddit)=>set((state)=>({\n                    state: {\n                        ...state.state,\n                        subreddit\n                    }\n                })),\n        setAnalyzing: (isAnalyzing)=>set((state)=>({\n                    state: {\n                        ...state.state,\n                        isAnalyzing\n                    }\n                })),\n        setAnalysisResults: (analysisResults)=>{\n            set((state)=>({\n                    state: {\n                        ...state.state,\n                        analysisResults\n                    }\n                }));\n            // Sauvegarder dans sessionStorage\n            _session__WEBPACK_IMPORTED_MODULE_0__.sessionManager.saveAnalysisResults(analysisResults);\n        },\n        setRecommendations: (recommendations)=>set((state)=>({\n                    state: {\n                        ...state.state,\n                        recommendations\n                    }\n                })),\n        reset: ()=>{\n            set({\n                state: {\n                    subreddit: \"\",\n                    isAnalyzing: false,\n                    analysisResults: null,\n                    recommendations: null\n                }\n            });\n            // Effacer de sessionStorage\n            _session__WEBPACK_IMPORTED_MODULE_0__.sessionManager.saveAnalysisResults(null);\n        },\n        initializeFromSession: ()=>{\n            // Charger les résultats d'analyse depuis sessionStorage\n            const savedResults = _session__WEBPACK_IMPORTED_MODULE_0__.sessionManager.getAnalysisResults();\n            if (savedResults) {\n                set((state)=>({\n                        state: {\n                            ...state.state,\n                            analysisResults: savedResults\n                        }\n                    }));\n            }\n        }\n    }));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/store.ts\n"));

/***/ })

});